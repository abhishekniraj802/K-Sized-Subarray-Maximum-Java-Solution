import java.io.*;
import java.lang.*;
import java.util.*;

public class Main {

public static void main(String args[]) throws IOException {

// taking input using class Scanner

BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
int t Integer.parseInt(br.readLine());

while (t--> 0) {



int k= Integer.parseInt(br.readLine());

String line br.readLine();

String[] tokens line.split(" ");

ArrayList<Integer> array = new ArrayList<>();

array.add(Integer.parseInt(token));

int[] arr = new int[array.size()];

int idx = 0;

for (int i array) 
  arr[idx++] = i;

  ArrayList<Integer> res new Solution().max_of_subarrays(k, arr);

// printing the elements of the ArrayList

  for (int i = 0; i < res.size(); i++) 
    System.out.print(res.get(i)""); 

  }
  System.out.println();

  }
}
class Solution {
    // Function to find maximum of each subarray of size k.
    public ArrayList<Integer> max_of_subarrays(int k, int arr[]) {
        ArrayList<Integer> result = new ArrayList<>();
        Deque<Integer> deque = new LinkedList<>(); 

        for (int i = 0; i < arr.length; i++) {
            if (!deque.isEmpty() && deque.peek() < i - k + 1) {
                deque.poll();
            }

            while (!deque.isEmpty() && arr[deque.peekLast()] < arr[i]) {
                deque.pollLast();
            }

            deque.offer(i);

            if (i >= k - 1) {
                result.add(arr[deque.peek()]);
            }
        }

        return result;
    }
}
